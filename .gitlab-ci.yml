image: frolvlad/alpine-glibc

before_script:
  - apk update && apk --no-cache add g++ gcc libgcc libstdc++ linux-headers make python3 curl tar
  - curl -fsSLO --compressed "https://unofficial-builds.nodejs.org/download/release/v14.17.3/node-v14.17.3-linux-x64-musl.tar.gz";
  - tar -xvzf "node-v14.17.3-linux-x64-musl.tar.gz" -C /usr/local --strip-components=1 --no-same-owner
  - ln -s /usr/local/bin/node /usr/local/bin/nodejs

  # Cache node modules - speeds up future builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules

# Define the stages
stages:
  - setup
  - build
  - deploy

# Define the process for each stage

# Define the process for setup stage
setup:
  stage: setup
  tags:
    - ohtu-build-2
  script:
    - npm install

build:
  stage: build
  tags:
    - ohtu-build-2
  script:
    - npm run build
  artifacts:
    name: orgrek-build
    paths:
      - build


# Define the process for deploy stage to development environment
deploy_dev:
  stage: deploy
  tags:
    - ohtu-build-2
  environment:
    name: development
  only:
    - OR-536
  script:
    - curl -fsSLO --compressed "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz";
    - tar xvzf openshift-client-linux.tar.gz -C /usr/local/bin
    # before any action, I connect to the OpenShift server with the appropriate credentials
    # this parameter: `--insecure-skip-tls-verify` is important because we use a certificate signed by an unknown authority
    - oc login https://$OPENSHIFT_ADDR_TEST:$OPENSHIFT_PORT --token=$OPENSHIFT_TOKEN_TEST --insecure-skip-tls-verify
    - oc project organisaatiorekisteri
    - oc start-build organisaatiorekisteri-frontend-dev --from-dir=. --follow

deploy_test:
  stage: deploy
  tags:
    - ohtu-build-2
  environment:
    name: test
  only:
    - test
  script:
    - curl -fsSLO --compressed "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz";
    - tar xvzf openshift-client-linux.tar.gz -C /usr/local/bin
    # before any action, I connect to the OpenShift server with the appropriate credentials
    # this parameter: `--insecure-skip-tls-verify` is important because we use a certificate signed by an unknown authority
    - oc login https://$OPENSHIFT_ADDR_TEST:$OPENSHIFT_PORT --token=$OPENSHIFT_TOKEN_TEST --insecure-skip-tls-verify
    - oc project organisaatiorekisteri
    - oc start-build organisaatiorekisteri-frontend-test --from-dir=. --follow

deploy_prod:
  stage: deploy
  tags:
    - ohtu-build-2
  environment:
    name: prod
  only:
    - prod
  script:
    - curl -fsSLO --compressed "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz";
    - tar xvzf openshift-client-linux.tar.gz -C /usr/local/bin
    # before any action, I connect to the OpenShift server with the appropriate credentials
    # this parameter: `--insecure-skip-tls-verify` is important because we use a certificate signed by an unknown authority
    - oc login https://$OPENSHIFT_ADDR_PROD:$OPENSHIFT_PORT --token=$OPENSHIFT_TOKEN_PROD --insecure-skip-tls-verify
    - oc project organisaatiorekisteri
    - oc start-build organisaatiorekisteri-frontend-prod --from-dir=. --follow
